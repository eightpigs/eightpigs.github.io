<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on 八只猪</title><link>https://eightpigs.io/tags/java/</link><description>Recent content in Java on 八只猪</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 11 Jun 2021 12:30:00 +0800</lastBuildDate><atom:link href="https://eightpigs.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>排序算法 - 选择、冒泡、插入、快排、希尔、归并、堆</title><link>https://eightpigs.io/2019/02/23/sort_algorithm/</link><pubDate>Sat, 23 Feb 2019 13:38:00 +0000</pubDate><guid>https://eightpigs.io/2019/02/23/sort_algorithm/</guid><description>&lt;p&gt;在编码过程中肯定少不了对数据进行排序，通常做法是使用标准库的实现、使用熟悉的排序算法或直接网上扒一个排序算法，然而却对排序算法的特点和适应场景了解得非常少。本文将从代码实现和不同量级数据的测试两个角度来说说各个排序算法。&lt;/p&gt;</description></item><item><title>JAVA 虚拟机栈</title><link>https://eightpigs.io/2018/08/10/java_virtual_machine_stack/</link><pubDate>Fri, 10 Aug 2018 21:21:00 +0000</pubDate><guid>https://eightpigs.io/2018/08/10/java_virtual_machine_stack/</guid><description>&lt;h2 id="概念"&gt;概念&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;JVM 虚拟机栈与程序计数器和[本地方法栈]一样都是线程私有的。&lt;/li&gt;
&lt;li&gt;栈帧可以理解为一个方法的运行空间&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="栈帧stack-frame"&gt;栈帧（Stack Frame）&lt;/h2&gt;
&lt;p&gt;栈帧是&lt;strong&gt;用于支持虚拟机进行方法调用和方法执行的数据结构&lt;/strong&gt;。每个方法从调用至执行完成的过程，都对应着一个栈帧在虚拟机栈里面从入栈到出栈的过程。&lt;/p&gt;</description></item><item><title>Spring Colud 之 统一配置中心</title><link>https://eightpigs.io/2017/12/29/spring_cloud_config_server/</link><pubDate>Fri, 29 Dec 2017 19:40:00 +0000</pubDate><guid>https://eightpigs.io/2017/12/29/spring_cloud_config_server/</guid><description>&lt;p&gt;在我们Java项目开发过程中，对于配置文件的多环境配置一般会采用以下方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用maven等构建工具基于resources自定义多环境&lt;/li&gt;
&lt;li&gt;使用市面上开源的统一配置中心，例如百度的disconf、淘宝的Diamond等&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么本文将讲述第二个方案中一个能为任何项目提供统一配置的管理方式：Spring Cloud Config。&lt;/p&gt;</description></item></channel></rss>